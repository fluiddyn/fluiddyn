variables:
  CODECOV_TOKEN: 202255eb-62eb-4b29-b065-0f832265e84f
  OMPI_ALLOW_RUN_AS_ROOT: "1"
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: "1"

image: registry.heptapod.net:443/fluiddyn/fluiddyn/ci/default:stable

stages:
  - image
  - lint
  - build
  - test
  - deploy

# Build an image for the above tasks; this should be a scheduled job, as
# it is quite unnecessary to run on every invocation.
CI image:
  stage: image
  tags:
    - container-registry-push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_BUILD_IMAGES == "1"'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - ""
  script:
    - |
      cat > /kaniko/.docker/config.json <<EOF
      {
        "auths": {
          "$CI_REGISTRY": {
            "username": "$CI_REGISTRY_USER",
            "password": "$CI_REGISTRY_PASSWORD"
          }
        }
      }
      EOF
    - >
      /kaniko/executor --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/docker/Dockerfile
      --single-snapshot
      --cleanup
      --destination registry.heptapod.net:443/fluiddyn/fluiddyn/ci/$CI_COMMIT_HG_BRANCH:stable

validate_style:
  stage: lint
  script:
    - black --diff --check fluiddyn fluiddoc
  allow_failure: true

validate_imports:
  stage: lint
  before_script:
    - pip install isort --user
  script:
    - isort --verbose --trailing-comma --atomic --check-only --only-modified --diff fluiddyn fluiddoc
  allow_failure: true

build_docs:
  stage: build
  image: sphinxdoc/sphinx:5.3.0
  before_script:
    - pip install -e .[doc]
  script:
    - make -C doc
  artifacts:
    paths:
      - doc/_build/html
  needs:
    - job: "CI image"
      optional: true

run_tests:
  stage: test
  script:
    - tox -e py38,codecov
  needs:
    - job: "CI image"
      optional: true
  artifacts:
    when: always
    paths:
      - pytest_result.xml
      - .coverage/index.html
    reports:
      junit: pytest_result.xml

pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "branch/default"'
  script:
    - mkdir public
    - cp -vr doc/_build/html/* public/
  dependencies:
    - build_docs
  needs: ["build_docs"]
  artifacts:
    paths:
      - public
